package vn.iotstar.controller;

import java.io.IOException;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

@WebServlet(urlPatterns = "/register")
public class RegisterController extends HttpServlet{

	private static final long serialVersionUID = 1L;
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		HttpSession session = req.getSession(false);
	    if (session != null && session.getAttribute("username") != null) {
	        // Nếu đã đăng nhập (có username trong session) thì chuyển hướng sang /home (hoặc /admin)
	        resp.sendRedirect(req.getContextPath() + "/home");
	        return;
	    }
	    // Nếu chưa đăng nhập, forward tới trang đăng ký
	    req.getRequestDispatcher("/views/register.jsp").forward(req, resp);
	}
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		resp.setCharacterEncoding("UTF-8");
		req.setCharacterEncoding("UTF-8");
		String password = req.getParameter("password");
		String confirm = req.getParameter("confirmPassword");
		if (!password.equals(confirm)) {
		    String alertMsg = "Mật khẩu xác nhận không khớp!";
		    req.setAttribute("alert", alertMsg);
		    req.getRequestDispatcher("/views/register.jsp").forward(req, resp);
		    return;
		}
		UserService service = new UserServiceImpl();
		String alertMsg = "";
		if (service.checkExistEmail(email)) {
		    alertMsg = "Email đã tồn tại!";
		    req.setAttribute("alert", alertMsg);
		    req.getRequestDispatcher("/views/register.jsp").forward(req, resp);
		    return;
		}
		if (service.checkExistUsername(username)) {
		    alertMsg = "Tài khoản đã tồn tại!";
		    req.setAttribute("alert", alertMsg);
		    req.getRequestDispatcher("/views/register.jsp").forward(req, resp);
		    return;
		}
		boolean isSuccess = service.register(username, password, email, fullname, phone);
		if (isSuccess) {
		    // Đăng ký thành công -> chuyển hướng sang trang đăng nhập
		    resp.sendRedirect(req.getContextPath() + "/login");
		} else {
		    // Đăng ký thất bại -> ở lại trang đăng ký và thông báo lỗi
		    alertMsg = "Có lỗi xảy ra, đăng ký không thành công!";
		    req.setAttribute("alert", alertMsg);
		    req.getRequestDispatcher("/views/register.jsp").forward(req, resp);
		}


}
